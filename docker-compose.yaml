version: '3.8'

services:
  db:
    build: ./conf/docker/db
    env_file:
      - .env
    volumes:
      - "./cache/db:/var/lib/postgresql/data"
    ports:
      - "55432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  asterisk:
    image: btmluiz/asterisk:18-lts
    env_file:
      - .env
      - asterisk.env
    volumes:
      - './conf/asterisk:/etc/asterisk'
    ports:
      - "5060:5060/udp"
      - "5061:5061/udp"
      - "8088:8088"
      - "8089:8089"
      - "4569:4569/udp"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

  prometeuspbx-migration:
    build: .
    env_file:
      - .env
      - asterisk.env
      - prometeuspbx.env
    volumes:
      - './:/code'
      - './prometeuspbx.yaml:/etc/prometeuspbx/prometeuspbx.yaml'
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py migrate --database asterisk"
    links:
      - db
    depends_on:
      db:
        condition: service_healthy

  prometeuspbx-api:
    build: .
    env_file:
      - .env
      - asterisk.env
      - prometeuspbx.env
    volumes:
      - './:/code'
      - './conf/asterisk/:/etc/asterisk'
      - './prometeuspbx.yaml:/etc/prometeuspbx/prometeuspbx.yaml'
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8081:8000"
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
      prometeuspbx-migration:
        condition: service_started
      redis:
        condition: service_started
  redis:
    image: redis:7

volumes:
  db: {}
